@startuml


enum TemperatureUnit {
    FAHRENHEIT
    CELSIUS
}


enum SpeedUnit {
    MPH
    KPH
}


enum DataSource {
    WEATHER_API
    WEATHER_GOV
    OPEN_METEO
}


struct WeatherLocation {
    + latitude: double
    + longitude: double
    + timezone: String
}


struct WeatherUnits {
    + temperatureUnit: TemperatureUnit
    + speedUnit: SpeedUnit
}


struct ForecastRequest {
    + daysOut: int
    + location: WeatherLocation
    + units: WeatherUnits
}


struct WeatherData {
    + temperatureAverage: double
    + temperatureUnit: TemperatureUnit
    + windSpeed: String
    + windSpeedUnit: SpeedUnit
    + windDirection: String
    + humidityPercentage: double
    + start: Date
    + end: Date
    + source: DataSource
}


struct WeatherAPIData {
    + avgtemp_c: double
    + avgtemp_f: double
    + maxwind_mph: double
    + maxwind_kph: double
    + avghumidity: double
    + date: String
}

struct WeatherGovData {
    + startTime: String
    + endTime: String
    + temperature: double
    + temperatureUnit: String
    + relativeHumidity: double
    + windSpeed: String
    + windDirection: String
}

struct WeatherGovGrid {
    + office: String
    + gridX: int
    + gridY: int
}

struct OpenMeteoData {
    + daily_units: Map<String, String>
    + time: Iterable<String>
    + temperature_2m_max: Iterable<double>
    + temperature_2m_min: Iterable<double>
    + windspeed_10m_max: Iterable<double>
    + windgusts_10m_max: Iterable<double>
    + winddirection_10m_dominant: Iterable<double>
}


interface WeatherServiceStrategy {
    + getForecast(in request: ForecastRequest): Iterable<WeatherData>
}

class PropertyChangeEvent {
    + getNewValue(): Object
    + getOldValue(): Object
    + getPropagationId(): Object
    + getPropertyName(): String
    + setPropagationId(Object propagationId): void
    + toString(): String
}

interface PropertyChangeListener {
    + propertyChange(in event: PropertyChangeEvent): void
}

class PropertyChangeSupport {
    + addPropertyChangeListener(PropertyChangeListener listener): void
    + firePropertyChange(PropertyChangeEvent event): void
    + removePropertyChangeListener(PropertyChangeListener listener): void
}

class WeatherServiceClient implements PropertyChangeListener {
    - name: String
    - dataFeed: Iterable<WeatherData>
    + setName(in name: String): void
    + getName(): String
    + printFeed(): void
}

class WeatherAPIClient {
    + requestData(in q: String, in days: int): Iterable<WeatherAPIData>
}

class WeatherGovAPIClient {
    - convertLatLongToGrid(in latitude: double, in longitude: double): WeatherGovGrid
    - submitRequest(in grid: WeatherGovGrid): Iterable<WeatherGovData>
    + requestData(in latitude: double, in longitude: double): Iterable<WeatherGovData>
}

class OpenMeteoAPIClient {
    + requestData(in latitude: double, in longitude: double): Iterable<OpenMeteoData>
}

class WeatherAPIService implements WeatherServiceStrategy {
    - propertyChangeSupport: PropertyChangeSupport
    - apiClient: WeatherAPIClient
    - normalizeWeatherData(in data: Iterable<WeatherAPIData>): Iterable<WeatherData>
    - convertDataItem(in item: WeatherAPIData): WeatherData
}

class WeatherGovService implements WeatherServiceStrategy {
    - propertyChangeSupport: PropertyChangeSupport
    - apiClient: WeatherGovAPIClient
    - normalizeWeatherGovData(in data: Iterable<WeatherGovData>): Iterable<WeatherData>
    - convertDataItem(in item: WeatherGovData): WeatherData
}

class OpenMeteoService implements WeatherServiceStrategy {
    - propertyChangeSupport: PropertyChangeSupport
    - apiClient: OpenMeteoAPIClient
    - normalizeOpenMeteoData(in data: Iterable<OpenMeteoData>): Iterable<WeatherData>
    - convertDataItem(in item: OpenMeteoData): WeatherData
}

TemperatureUnit <.. WeatherUnits
SpeedUnit <.. WeatherUnits
WeatherLocation <.. ForecastRequest
WeatherUnits <.. ForecastRequest
TemperatureUnit <.. WeatherData
SpeedUnit <.. WeatherData
DataSource <.. WeatherData
WeatherData <.. WeatherServiceStrategy
WeatherServiceClient "1" o-- "0..*" WeatherData
ForecastRequest <.. WeatherServiceStrategy
PropertyChangeEvent <.. PropertyChangeListener
WeatherAPIData <.. WeatherAPIClient
WeatherGovGrid <.. WeatherGovAPIClient
WeatherGovData <.. WeatherGovAPIClient
OpenMeteoData <.. OpenMeteoAPIClient
WeatherAPIService "1" *.. "1" WeatherAPIClient
WeatherGovService "1" *.. "1" WeatherGovAPIClient
OpenMeteoService "1" *.. "1" OpenMeteoAPIClient
PropertyChangeListener <.. PropertyChangeSupport
PropertyChangeEvent <.. PropertyChangeSupport
WeatherAPIService "1" *.. "1" PropertyChangeSupport
WeatherGovService "1" *.. "1" PropertyChangeSupport
OpenMeteoService "1" *.. "1" PropertyChangeSupport

@enduml